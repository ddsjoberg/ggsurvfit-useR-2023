{
  "hash": "d62c2c5c8009562bbcc7d9e7deeff495",
  "result": {
    "markdown": "---\ntitle: \"Visualizing Survival Data with the {ggsurvfit} R Package\"\nauthor: \"Daniel D. Sjoberg & Mark Baillie\"\nfooter: \"[{ggsurvfit} R Package](https://danieldsjoberg.com/ggsurvfit-useR-2023)\"\nlogo: \"images/ggsurvfit-logo.png\"\neditor: source\nengine: knitr\nformat: \n  revealjs: \n    theme: slides.scss\n    transition: none #fade\n    slide-number: true\n    chalkboard: true\nexecute:\n  echo: true\n  freeze: auto\ncache: true\n---\n# {ggsurvfit}\n\n::: {.cell}\n\n:::\n\n\n## Licensing\n\n<br>\n\nThis work is licensed under [Creative Commons Zero v1.0 Universal](https://creativecommons.org/publicdomain/zero/1.0/).\n\n\n## Authors\n\n::: columns\n::: {.column width=\"50%\"}\n::: {.center}\n**Daniel D. Sjoberg**\n\n![](images/dan-circle-cropped.png){width=\"70%\"}\n![](images/genentech-logo.png){width=\"50%\"}\n:::\n:::\n\n::: {.column width=\"50%\"}\n::: {.center}\n**Mark Baillie**\n\n![](images/mark.png){width=\"70%\"}\n\n![](images/novartis-logo.png){width=\"50%\"}\n:::\n:::\n:::\n\n# A whistle stop tour of {ggsurvfit}\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-2_6c95599f3fb7163b0ace5d54ce2f6809'}\n\n:::\n\n* Motivation and why {ggsurvfit} ? \n\n* **Overview of package functionality**\n\n* Additional examples \n\n\n# Motivation \n\n## A widely used statistical summary \n\n::: {.smaller}\n\nTime-to-event (a.k.a Survival or Kaplan-Meier) summaries are commonplace, from oncology to cardiovascular. \n\nKM displays the estimated cumulative proportion over time of patients who survive (or report an event)\n\nHowever, it was not such a simple start:\n\nJohn Tukey insisted Edward L. Kaplan and Paul Meier combine their efforts after submitting independent papers to JASA, which took 4 more years for the authors of the “KM” estimator to publish\n\nAfterwards “Paul Meier himself is said to have spoken with bemusement about people plotting KM estimates over time and was not convinced he actually liked it” [Morris et al, 2018]( https://bmjopen.bmj.com/content/9/9/e030215)\n\n:::\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-3_adad4117ecca4f3885a6a7d1df2b6929'}\n\n```{.r .cell-code}\nlibrary(survival)\nfit <- survfit(Surv(time, status) ~ surg, data = df_colon) \nplot(fit)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-3-1.png){width=960}\n:::\n:::\n\n\n## Can we do better? \n\n::: {.smaller}\n\nThere are many design and analytical choices to be made when designing even a simple KM plot – these choices can lead to wide variation in presentation quality.\n\n:::\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-4_18b546122bc5f63b62b1908dc5d3ab29'}\n\n```{.r .cell-code}\nlibrary(ggsurvfit)\nfit2 <- survfit2(Surv(time, status) ~ surg, data = df_colon) \nggsurvfit(fit2) + scale_ggsurvfit()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-4-1.png){width=960}\n:::\n:::\n\n## {ggsurvfit} overview\n\n* Ease the creation of time-to-event summary figures with ggplot2\n\n* Concise and modular code \n\n* Ready for publication or sharing figures\n\n* Sensible defaults\n\n* Supports CDISC data model\n\n* Also supports competing risks cumulative incidence summaries  \n\n# Why {ggsurvfit} ?\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-5_9bd1df971a9891f38558db03d17adf0b'}\n\n:::\n\n## Use ggplot2 functions\n\n* Each `ggsurvfit` add-on function is written as a proper `ggplot2` geom\n* Enables package functions woven with ggplot2 functions seamlessly \n* Don’t need to learn to style with `ggsurvfit` functions\n* Use your ggplot2 knowledge if you want to customize \n\nLimitless customization\n\n* Modify x-axis scales or any other plot feature and risk table will still align with plot\n\nSimple saving and export through `ggplot2::ggsave()`\n\n## Ready to publish legends\n\n* Raw variable names do not appear in the figure \n\n::: {.cell layout-ncol=\"2\" hash='index_cache/revealjs/unnamed-chunk-6_c4df397fef3330d7aa9dea326bfd9eb6'}\n\n```{.r .cell-code}\nfit <- survfit2(Surv(time, status) ~ surg, data = df_colon) \nsurvminer::ggsurvplot(fit)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-6-1.png){width=960}\n:::\n\n```{.r .cell-code}\nggsurvfit(fit) + scale_ggsurvfit()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-6-2.png){width=960}\n:::\n:::\n\n\n\n\n\n\n<!-- {{< include example-data.qmd >}} -->\n\n# Basic Example\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-7_59d33ad2a13f4f1f13250120b12fc4e3'}\n\n:::\n\n::: columns\n::: {.column width=\"80%\"}\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-8_472bcb6883d69d1e109a28109ad8e26a'}\n\n```{.r .cell-code}\nsurvfit2(Surv(time, status) ~ surg, data = df_colon) |> \n  ggsurvfit() +\n  add_risktable()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-8-1.png){width=960}\n:::\n:::\n\n:::\n::: {.column width=\"20%\"}\n::: {.smaller}\n::: {.incremental}\n\n* The Good\n  - Simple code and figure is nearly publishable\n  - Risk table with both no. at risk and events easily added\n  - x-axis label taken from the `time` column label\n  - Can use **ggplot2** `+` notation\n\n  \n* The Could-Be-Better\n  - y-axis label is incorrect, and the range of axis is best at 0-100%\n  - Axis padding a bit more than I prefer for a KM figure\n  - x-axis typically has more tick marks for KM figure\n\n:::\n:::\n:::\n:::\n\n# Basic Example\n\n::: columns\n::: {.column width=\"80%\"}\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-9_33c9659146a49443167d4a24af79f33a'}\n\n```{.r .cell-code  code-line-numbers=\"4-5\"}\nsurvfit2(Surv(time, status) ~ surg, data = df_colon) |> \n  ggsurvfit() +\n  add_risktable() +\n  scale_ggsurvfit() +\n  labs(y = \"Recurrence-free Progression\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-9-1.png){width=960}\n:::\n:::\n\n:::\n::: {.column width=\"20%\"}\n::: {.smaller}\n::: {.incremental}\n\n* Padding has been reduced and curves begin in the upper left corner of plot\n\n* x-axis reports additional time points (and as a result, the risk table as well)\n\n* We updated the y-axis label weaving standard **ggplot2** functions\n\n:::\n:::\n:::\n:::\n\n\n# Basic Example\n\n::: columns\n::: {.column width=\"80%\"}\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-10_56007d4f3631dd07299be8d3b0d66bfd'}\n\n```{.r .cell-code  code-line-numbers=\"6\"}\nsurvfit2(Surv(time, status) ~ surg, data = df_colon) |> \n  ggsurvfit() +\n  add_risktable() +\n  scale_ggsurvfit() +\n  labs(y = \"Recurrence-free Progression\") +\n  ggeasy::easy_move_legend(\"top\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-10-1.png){width=960}\n:::\n:::\n\n:::\n::: {.column width=\"20%\"}\n::: {.smaller}\n\n* Padding has been reduced and curves begin in the upper left corner of plot\n\n* x-axis reports additional time points (and as a result, the risk table as well)\n\n* We updated the y-axis label weaving standard **ggplot2** functions\n\n* We can even use ggplot2-extender functions\n\n:::\n:::\n:::\n\n# Additional examples\n\n# Default and styled modifications with ggplot2\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-11_52b2047888e64f9e1b6818478bad6bae'}\n\n:::\n\n## {ggsurvfit} defaults \n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-12_dc585f4f01c5a2698accbc4a4b444c5f'}\n\n```{.r .cell-code}\ngg_default <-\n  survfit2(Surv(time, status) ~ surg, data = df_colon) |>\n  ggsurvfit() +\n  add_confidence_interval() +\n  scale_ggsurvfit() +\n  labs(title = \"Default\")\n\ngg_default\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-12-1.png){width=960}\n:::\n:::\n\n## {ggplot2} styled \n\n\n::: {.cell output-location='slide' hash='index_cache/revealjs/unnamed-chunk-13_d40dba0ae11899153a36de84865c6ea3'}\n\n```{.r .cell-code  code-line-numbers=\"|2|3|4-8|9|10-11|12-13|14|15-18|\"}\ngg_styled <-\n  gg_default +\n  coord_cartesian(xlim = c(0, 8)) +\n  scale_y_continuous(\n    limits = c(0, 1),\n    labels = scales::percent, \n    expand = c(0.01, 0)\n  ) +\n  scale_x_continuous(breaks = 0:9, expand = c(0.02, 0)) +\n  scale_color_manual(values = c('#54738E', '#82AC7C')) +\n  scale_fill_manual(values = c('#54738E', '#82AC7C')) +\n  theme_minimal() +\n  theme(legend.position = \"bottom\") +\n  guides(color = guide_legend(ncol = 1)) +\n  labs(\n    title = \"{ggplot2} styled\",\n    y = \"Percentage Survival\"\n  )\n\ngg_styled\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-13-1.png){width=960}\n:::\n:::\n\n\n\n## Side-by-side\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-14_5041bb44c9d78226141a81f9c2d57526'}\n\n```{.r .cell-code}\nlibrary(patchwork)\ngg_default + gg_styled\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-14-1.png){width=960}\n:::\n:::\n\n\n# Risk tables \n\n## {ggsurvfit} defaults\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-15_9165f6aed2c2f06ad193c7ea8f7fd1a3'}\n\n```{.r .cell-code}\nsurvfit2(Surv(time, status) ~ surg, data = df_colon) |>\n  ggsurvfit() +\n  add_risktable()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-15-1.png){width=960}\n:::\n:::\n\n\n## Group by statistic or strata \n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-16_b42e72dc5eeab341a72bb12cd844a3d4'}\n\n```{.r .cell-code}\nggrisktable <-\n  survfit2(Surv(time, status) ~ surg, data = df_colon) |>\n  ggsurvfit() +\n  scale_ggsurvfit() +\n  add_risktable(risktable_group = \"risktable_stats\") \nggrisktable\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-16-1.png){width=960}\n:::\n:::\n\n## Colour encoding strata\n \n::: {.cell hash='index_cache/revealjs/unnamed-chunk-17_734e49c34c9a241e6e279dff93c07af0'}\n\n```{.r .cell-code}\nggrisktable +\n  add_risktable_strata_symbol(symbol = \"\\U25CF\", size = 10)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-17-1.png){width=960}\n:::\n:::\n\n\n\n## Customizing the risktable statistics\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-18_72721892c6166b975192b6ec9a79f8f1'}\n\n```{.r .cell-code}\nsurvfit2(Surv(time, status) ~ surg, data = df_colon) |>\n  ggsurvfit() +\n  add_risktable(risktable_stats = \"{n.risk} ({cum.event})\") \n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-18-1.png){width=960}\n:::\n:::\n\n\n\n# Quantiles \n\n## Median summary \n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-19_80047b0560a49d2be1d7d9e92ea6b829'}\n\n```{.r .cell-code}\nsurvfit2(Surv(time, status) ~ surg, data = df_colon) |>\n  ggsurvfit(linewidth = 0.8) +\n  add_censor_mark() +\n  add_quantile(y_value = 0.5) +\n  scale_ggsurvfit()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-19-1.png){width=960}\n:::\n:::\n\n\n## At a given timepoint\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-20_dcf4365a34e4f9a27556d7ae674a435c'}\n\n```{.r .cell-code}\nsurvfit2(Surv(time, status) ~ surg, data = df_colon) |>\n  ggsurvfit(linewidth = 0.8) +\n  add_censor_mark() +\n  add_quantile(x_value = 5, linetype = \"solid\", \n               linewidth = 1.0, alpha = 0.3) +\n  scale_ggsurvfit()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-20-1.png){width=960}\n:::\n:::\n\n# KMunicate and themes\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-21_b2753a8115c01939a64ef37cfbf350e9'}\n\n:::\n\n## What are the elements of an effective and publishable KM plot? \n\nThere are many options to consider and many guidances available:\n\n::: {.smaller}\n\n* [Morris et al. 2018](https://bmjopen.bmj.com/content/9/9/e030215) provide useful guidance for publication figures\n\n* To get figures that align with **KMunicate** use the `theme_ggsurvfit_KMunicate()` theme along with these function options.\n\n:::\n\nA note of caution on standards: \n\n::: {.smaller}\n\n* Design for your purpose, one size does not fit all\n\n* Designing means you need to think carefully about your [audience and aims](http://graphicsprinciples.github.io/)\n\n:::\n\n<!-- ![](images/KMunicate.jpg){width=\"50%\"} -->\n\n\n\n## KMunicate\n\n::: {.cell output-location='slide' hash='index_cache/revealjs/unnamed-chunk-22_d11024a645175ae2b86dce71b4accf1f'}\n\n```{.r .cell-code}\nsurvfit2(Surv(time, status) ~ surg, data = df_colon) |>\n  ggsurvfit(linetype_aes = TRUE) +\n  add_confidence_interval() +\n  add_risktable(\n    risktable_stats = c(\"n.risk\", \"cum.censor\", \"cum.event\")\n  ) +\n  theme_ggsurvfit_KMunicate() +\n  scale_ggsurvfit() +\n  theme(legend.position = c(0.85, 0.85)) +\n  labs(y = \"Recurrence-free Progression\") \n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-22-1.png){width=960}\n:::\n:::\n\n\n\n\n<!-- {{< include 03-cdisc.qmd >}} -->\n\n# {ggsurvfit} wrap up\n\n* Ease the creation of time-to-event summary figures with ggplot2\n\n* Concise and modular code\n\n* Ready for publication or sharing figures\n\n* Sensible defaults\n\n* Also supports competing risks cumulative incidence summaries\n\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-23_3b7fee55b3059f626ee76714711c7c09'}\n\n```{.r .cell-code}\n# Install ggsurvfit from CRAN with:\ninstall.packages(\"ggsurvfit\")\n\n# install.packages(\"devtools\"):\ndevtools::install_github(\"pharmaverse/ggsurvfit\")\n```\n:::\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}