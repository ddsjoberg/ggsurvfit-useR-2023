[
  {
    "objectID": "slidespage.html",
    "href": "slidespage.html",
    "title": "Slides",
    "section": "",
    "text": "View slides in full screen"
  },
  {
    "objectID": "slides-extenders/index.html#licensing",
    "href": "slides-extenders/index.html#licensing",
    "title": "Visualizing Survival Data with the {ggsurvfit} R Package",
    "section": "Licensing",
    "text": "Licensing\n\nThis work is licensed under Creative Commons Zero v1.0 Universal."
  },
  {
    "objectID": "slides-extenders/index.html#authors",
    "href": "slides-extenders/index.html#authors",
    "title": "Visualizing Survival Data with the {ggsurvfit} R Package",
    "section": "Authors",
    "text": "Authors\n\n\n\nDaniel D. Sjoberg\n \n\n\n\nMark Baillie"
  },
  {
    "objectID": "slides-extenders/01-overview.html",
    "href": "slides-extenders/01-overview.html",
    "title": "Outline",
    "section": "",
    "text": "Outline\n\n\nOverview of package functionality\nDiscussion for ggplot2-extenders\n\n\n\n\nData\nExamples use a labeled version of the survival::colon data set.\n\n\n\nlibrary(ggsurvfit)\n\nLoading required package: ggplot2\n\nlibrary(gtsummary)\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ lubridate 1.9.2     ✔ tibble    3.2.1\n✔ purrr     1.0.1     ✔ tidyr     1.3.0\n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\ndf_colon &lt;- df_colon |&gt; select(time, status, surg)\ndf_colon\n\n# A tibble: 929 × 3\n    time status surg                       \n   &lt;dbl&gt;  &lt;dbl&gt; &lt;fct&gt;                      \n 1 2.65       1 Limited Time Since Surgery \n 2 8.45       0 Limited Time Since Surgery \n 3 1.48       1 Limited Time Since Surgery \n 4 0.671      1 Extended Time Since Surgery\n 5 1.43       1 Extended Time Since Surgery\n 6 2.48       1 Limited Time Since Surgery \n 7 0.627      1 Extended Time Since Surgery\n 8 8.74       0 Limited Time Since Surgery \n 9 8.69       0 Limited Time Since Surgery \n10 9.06       0 Extended Time Since Surgery\n# ℹ 919 more rows\n\n\n\n\ndf_colon |&gt; \n  tbl_summary()\n\n\n\n\n\n  \n    \n    \n      Characteristic\n      N = 9291\n    \n  \n  \n    Follow-up time, years\n4.24 (1.01, 6.27)\n    Recurrence Status\n468 (50%)\n    Time from Surgery to Treatment\n\n        Limited Time Since Surgery\n682 (73%)\n        Extended Time Since Surgery\n247 (27%)\n  \n  \n  \n    \n      1 Median (IQR); n (%)\n    \n  \n\n\n\n\n\n\n\n\nBasic Example\n\n\n\nsurvfit2(Surv(time, status) ~ surg, data = df_colon) |&gt; \n  ggsurvfit() +\n  add_risktable()\n\n\n\n\n\n\n\n\nThe Good\n\nSimple code and figure is nearly publishable\nRisk table with both no. at risk and events easily added\nx-axis label taken from the time column label\nCan use ggplot2 + notation\n\nThe Could-Be-Better\n\ny-axis label is incorrect, and the range of axis is best at 0-100%\nAxis padding a bit more than I prefer for a Kaplan-Meier figure\nx-axis typically has more tick marks for Kaplan-Meier figure\n\n\n\n\n\n\n\n\nBasic Example\n\n\n\nsurvfit2(Surv(time, status) ~ surg, data = df_colon) |&gt; \n  ggsurvfit() +\n  add_risktable() +\n  scale_ggsurvfit() +\n  labs(y = \"Recurrence-free Progression\")\n\n\n\n\n\n\n\n\nPadding has been reduced and curves begin in the upper left corner of plot\nx-axis reports additional time points (and as a result, the risk table as well)\nWe updated the y-axis label weaving standard ggplot2 functions\n\n\n\n\n\n\n\nBasic Example\n\n\n\nsurvfit2(Surv(time, status) ~ surg, data = df_colon) |&gt; \n  ggsurvfit() +\n  add_risktable() +\n  scale_ggsurvfit() +\n  labs(y = \"Recurrence-free Progression\") +\n  ggeasy::easy_move_legend(\"top\")\n\n\n\n\n\n\n\nPadding has been reduced and curves begin in the upper left corner of plot\nx-axis reports additional time points (and as a result, the risk table as well)\nWe updated the y-axis label weaving standard ggplot2 functions\nWe can even use ggplot2-extender functions\n\n\n\n\n\n\nAnother Example\n\nsurvfit2(Surv(time, status) ~ surg, data = df_colon) |&gt;\n  ggsurvfit(type = \"risk\", linewidth = 1.2) +\n  add_confidence_interval() +\n  add_risktable(risktable_stats = \"n.risk\") +\n  add_risktable_strata_symbol(symbol = \"\\U25CF\", size = 17) +\n  add_quantile(x_value = 5, linetype = \"dotted\", linewidth = 0.8) +\n  add_censor_mark(size = 2, alpha = 0.2) +\n  add_pvalue(caption = \"Log-rank {p.value}\") +\n  scale_ggsurvfit() +\n  scale_color_manual(values = c('#54738E', '#82AC7C')) +\n  scale_fill_manual(values = c('#54738E', '#82AC7C')) +\n  labs(y = \"Risk of Recurrence\")"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Visualizing Survival Data with the {ggsurvfit} R Package",
    "section": "",
    "text": "🗓 July 21, 2023 | Time TBD\n🏨 Roche Campus, Grenzacherstrasse 124, 4070 Basel, Switzerland\n💥 Conference Registration through July 14th or until event sells out\n\n\nAbstract\nThe {ggsurvfit} package eases the creation of time-to-event or survival analysis summary figures with {ggplot2}, such as a Kaplan-Meier plot. The concise and modular code creates figures ready for publication. Each {ggsurvfit} function (e.g. add_confidence_interval(), add_risktable(), etc.) is written as a proper {ggplot2} ‘geom’, meaning the package functions can be woven with {ggplot2} functions. The implication is that you do not need to learn new functions to style the plot: rather, you may rely on the suite of {ggplot2} functions you already know.\nLastly, the package includes gems for those using the CDISC ADaM ADTTE data model. The “PARAM” value is used to construct enhanced labels in the figure. The event indicator, “CNSR”, is coded in the opposite way the {survival} package expects. This difference creates an opportunity for errors to be silently introduced in an analysis. The {ggsurvfit} package exports a function called Surv_CNSR() to resolve this concern by creating a survival object that uses ADTTE coding conventions as the default. The function can be used in {ggsurvfit} as well as any other package with a survival endpoint.\nInstall {ggsurvfit} from CRAN with\ninstall.packages('ggsurvfit')\n\n\nAuthors\n\nDaniel D. Sjoberg (he/him) is a Software Engineer at Genentech. Previously, he was a Lead Data Science Manager at the Prosate Cancer Clinical Trials Consortium, and a Senior Biostatistician at Memorial Sloan Kettering Cancer Center in New York City. He enjoys R package development, creating many packages available on CRAN, R-Universe, and GitHub. His research interests include adaptive methods in clinical trials, precision medicine, and predictive modeling. Daniel is the winner of the 2021 American Statistical Association (ASA) Innovation in Statistical Programming and Analytics award.\n    \n \n\n\nMark Baillie is a member of the Advanced Methodology and Data Science group at Novartis. He focuses on methodology to support drug development, working on a variety of internal and external initiatives to improve the reporting of clinical trials. These include effective visual communication, initial data analysis, DMC reporting, analaysis results standards, and data challenges. Mark is a member of the Stratos initiative and the PSI visualisation special interest group."
  },
  {
    "objectID": "slides-extenders/00-setup.html",
    "href": "slides-extenders/00-setup.html",
    "title": "Introduction",
    "section": "",
    "text": "── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\n\n\n\nThis work is licensed under Creative Commons Zero v1.0 Universal.\n\n\n\n\n\n\nDaniel D. Sjoberg\n \n\n\n\nMark Baillie"
  },
  {
    "objectID": "slides-extenders/00-setup.html#licensing",
    "href": "slides-extenders/00-setup.html#licensing",
    "title": "Introduction",
    "section": "",
    "text": "This work is licensed under Creative Commons Zero v1.0 Universal."
  },
  {
    "objectID": "slides-extenders/00-setup.html#authors",
    "href": "slides-extenders/00-setup.html#authors",
    "title": "Introduction",
    "section": "",
    "text": "Daniel D. Sjoberg\n \n\n\n\nMark Baillie"
  },
  {
    "objectID": "slides-extenders/02-discussion.html",
    "href": "slides-extenders/02-discussion.html",
    "title": "Outline",
    "section": "",
    "text": "Outline\n\n\nOverview of package functionality\nDiscussion for ggplot2-extenders\n\nSide-by-side plots with {patchwork}\nStructure of {ggsurvfit} functions\n\n\n\n\n\nSide-by-Side\n\n\n\nlibrary(ggsurvfit)\n\nLoading required package: ggplot2\n\nlibrary(patchwork)\n\np &lt;-\n  survfit2(Surv(time, status) ~ 1, df_colon) |&gt; \n  ggsurvfit() +\n  add_confidence_interval() +\n  add_risktable() +\n  scale_ggsurvfit()\n\n\n\n# build plot (which constructs the risktable)\nbuilt_p &lt;- ggsurvfit_build(p)\n\n# wrap built plot to place side-by-side\np2 &lt;- \n  wrap_elements(built_p) | \n  wrap_elements(built_p)\n\n\n\n\n\n\n\n\n\nThe risk tables are not built until print or running ggsurvfit_build()\nThen you have to wrap the\n\n\n\nSide-by-Side\nHow can we make this easier for ggsurvfit users?\n\nIDEA 1\n\nIn patchwork, the first line the arithmetic operator is a conditional to assess if the object needs processing\nWe could make this operation an exported generic function!\nIssue submitted in Nov 2022, but no response yet. https://github.com/thomasp85/patchwork/issues/310\n\n\n\n\nSide-by-Side\n\n\nCurrent patchwork   Proposed patchwork\n\nif (should_autowrap(e2)) e2 &lt;- wrap_elements(full = e2) \n\nshould_autowrap &lt;- function(x) {\n    is.grob(x) || inherits(x, 'formula') || is.raster(x) || inherits(x, 'nativeRaster')\n  }\n\n#' @export\n#' @rdname arithmetic_prep\narithmetic_prep &lt;- function(x, ...) {\n  UseMethod(\"arithmetic_prep\")\n}\n\n#' @export\n#' @rdname arithmetic_prep\narithmetic_prep.default &lt;- function(x, ...) {\n  # wrap input plot as needed\n  if (is.grob(x) || inherits(x, 'formula') || is.raster(x) || inherits(x, 'nativeRaster')) {\n    x &lt;- wrap_elements(full = x)\n  }\n  x\n}\n\n\n\nAny tips on getting this through??\n\n\n\nSide-by-Side\n\nIDEA 2: S4 😬😬😬\n\nI reached out on Stack Overflow, but couldn’t get the S4 solution to work\nAlso, I don’t know anything about S4 🤷\nhttps://stackoverflow.com/questions/74072102\n\n\n\n\nFunction Stucture\n\nThe package’s functions work! Nice!\nI think I may have implemented it in a strange way.\nIs there better way? 🤔🤔\n\n\n\nFunction Stucture\nadd_censor_mark &lt;- function(...) {\n  add_censor_mark_empty_list &lt;- list()\n  structure(add_censor_mark_empty_list,\n            dots = utils::modifyList(x = list(na.rm = TRUE, size = 2, shape = 3),\n                                     val = rlang::dots_list(...)),\n            class = \"add_censor_mark\")\n}\n\nggplot_add.add_censor_mark &lt;- function (object, plot, object_name) {\n  update_add_censor_mark(plot, object)\n}\n\nupdate_add_censor_mark &lt;- function(p, add_censor_mark_empty_list) {\n  # getting user-passed arguments\n  dots &lt;- attr(add_censor_mark_empty_list, \"dots\")\n\n  # add censor marks with `geom_point()`\n  p +\n    rlang::inject(\n      ggplot2::geom_point(\n        data = ~ tidyr::uncount(.x, weights = .data$n.censor),\n        ggplot2::aes(!!!.construct_censor_mark_aes(p)),\n        !!!dots\n      )\n    )\n}"
  },
  {
    "objectID": "slides/index.html#licensing",
    "href": "slides/index.html#licensing",
    "title": "Visualizing Survival Data with the {ggsurvfit} R Package",
    "section": "Licensing",
    "text": "Licensing\n\nThis work is licensed under Creative Commons Zero v1.0 Universal."
  },
  {
    "objectID": "slides/index.html#authors",
    "href": "slides/index.html#authors",
    "title": "Visualizing Survival Data with the {ggsurvfit} R Package",
    "section": "Authors",
    "text": "Authors\n\n\n\nDaniel D. Sjoberg\n \n\n\n\nMark Baillie"
  }
]